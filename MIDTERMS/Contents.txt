//MIDTERMS
History of Cascading Style Sheet (CSS)
  
  In the early days of the Web, designers complained that they didn't have enough control over how their pages looked. They wanted to 
change fonts and colors, and the alignment of text. For years after Sir Tim Berners-Lee first created the World Wide Web in 1989, there was no such thing as CSS. Cascading Style Sheets (CSS) was created to help designers separate style from structure of an HTML document. CSS adds the style and design to a web page. The term cascading comes from the ability to combine multiple CSS files to determine the style for one page.

  In 1992, Pei Wei developed a browser called Viola, which had its own style sheet language. In January 23, 1993, NCSA Mosaic was released, making the web more popular than ever, but it only offered limited capability to change fonts and colors. In October 1994, Hakon Wium Lie released the first draft of “Cascading HTML Style Sheets”. In May 1995, the discussion on www-style mailing list was created and influenced the development of CSS and later HTML was removed from the name. In August 1996, Microsoft Internet Explorer became the first browser to support CSS. Netscape followed suit in supporting CSS, but also implemented an alternative Javascript Style Sheets.

 In December 1996, CSS Level 1 (W3C Recommendation) was relesed. CSS 1 supported: font properties, text attributes, alignment of text, tables, images and more, colors of text and backgrounds, spacing of words, letters and lines, margins, borders, padding and positioning, and unique identification and classification of groups of attributes. In May of 1998, CSS 2 (W3C Recommendation) was released, which added new capabilities including z-index, media types, bidirectional text, absolute, relative and fixed positioning, and support for aural style sheets. June 2011 that W3C released CSS 2.1, which fixed errors and aligned the capabilities better with browser functions.
Not long after, CSS3 was released and capabilities broken into modules. Between June 2011 and June 2012, the following four modules were released as formal recommendations: color, selectors level 3, namespaces and media queries.

Cascading Style Sheets (CSS)
 > Language used to specify the presentation (eg. layout formatting, font colors etc.) or structurally marked up documents (eg. HTML,XML,SVG, METAML etc.)
 > It is developed by Hakon Wium Lie (CSS) and Bert Bos(SSP)
 
HTML StyleSheets
  -the sources of stules for HTML documents
    > Author Styles
      -external (a.k.a linked) stylesheets 
           An external style sheet is a separate file where you can declare all the styles that you want to use on your website. You                then link to the external style sheet from all your HTML pages.
      -embedded (a.k.a internal) stylesheets
          An internal stylesheet holds the CSS code for the webpage in the head section of the particular file. This makes it easy to             apply styles like classes or id's in order to reuse the code. The downside of using an internal stylesheet is that changes to           the internal stylesheet only effect the page the code is inserted into
      
      -Inline Styles
          The Inline style is specific to the tag itself. The inline style uses the HTML "style" attribute to style a specific tag. This           is not recommended, as every CSS change has to be made in every tag that has the inline style applied to it. The Inline style           is good for one an individual CSS change that you do not use repeatedly through the site.
          
    > User Styles
      - Some browsers provide (non-standard) alternatives through plug-ins/ Etensions like Stylish.
      
    > User Agent Styles
      - Sample default user agent sheet from css 2.1
      - the source of a style denotes its origin, which is used in determining its precedence in the cascade.
      
CSS Statements
 - at rules
   > It is a CSS statement beginning with an at sign, '@' (U+0040 COMMERCIAL AT), then followed by an identifier and includes everything up to the next semi-colon, ';' (U+003B SEMICOLON), or the next CSS block, whichever comes first.
   
   Several at rules :
   @charset — Defines the character set used by the style sheet.
   @import — Tells the CSS engine to include an external style sheet.
   @namespace — Tells the CSS engine that all its content must be considered prefixed with an XML namespace.
   Nested at-rules — A subset of nested statements, which can be used as a statement of a style sheet as well as inside of conditional group rules:
        -@media — A conditional group rule that will apply its content if the device meets the criteria of the condition defined using a media query.
        -@font-face — Describes the aspect of an external font to be downloaded.
        -@keyframes — Describes the aspect of intermediate steps in a CSS animation sequence.

 - css rules sets (CSS Rules, Style rules)
    Css allows applying different declarations to different parts of the document by associating conditions with declarations blocks.
   > It consists of a selector, brace, enlcosed declaration box which contains zero or more semi-colo(;) separated property declaration
     
 CSS Selectors
 >
 
 
 Selector Syntax
 - Chain of one or more sequences of simple separators separated by combinators with one pseudo-element possibly appended to the last sequence.
 
 Simple Selectors
 >UNIVERSAL SELECTORS-
 >TYPE SELECTORS
 >ID SELECTORS
 >CLASS SELECTORS
 >ATTRIBUTE SELECTORS
 >PSEUDO SELECTORS
 
 Sequence of Simple Selectors
    Chain of simple selectors not separated by combinators.
    
 Selector Group 
 >
 
 
 Combinators
  >descendant combinator eg.()
  >child combinator(>)
  >sibling combinators
    -adjacent sibling combinator(+)
    -general sibling combinator(~)
   
   Pseudo classes - characteristics associated with content due to an action done on the content.
   
    *Dynamic Pseudo classes
      -link psedudo-classes
        :link,:visited
      -user action-classes
        :hover,:active,:focus
    *Target Pseudo-class
       -:target
    *Language Pseudo-class
      -:lang()
    *UI Element states
      -:enabled,:disabled,:checked,:intermediate
    *Structural states
      -:root,:first-child,:last-child,:only-child
      -:nth-child,:nth-last-child()
      -:first-of-type,:last-of-type,:only-of-type,:nth-of-type
      
      
      Pseudo Elements
      > :first-letter, :: first-letter
      > :first-line, :: first-line
      > :before, ::before
      > :after, ::after
      
      Selector Group - comma separated list of selectors representing the union of all elements selected by each of the selectors in the list.
      
      Accordion-//find description
      
      CSS Selectors
        CSS Rule Precedence
        - HTML element may be the subject of the selectors of multiple styles roles.
        
        - When such rules target different properties, their effects cascade are combined.
        
        - When the styles involve the same priority, they conflict and must be resolved such that the only one style is applied.
        
        - Resolution: 
          >by origin and importance
          >by specifity
          >by order
          
          
       Origin and Importance
        The origin of a declaration is based on where it comes from and it's importance is whether or not it is declared "important".
        
        The precedence of the various origin is in DESCENDING order.
        1.Transition Declarations
        2.Important user agent declarations
        3.Important user declarations
        4.Important override decalarations
        5.Important author declarations
        6.Animation Declarations
        7.Normal Override Declarations
        8.Normal Author declarations
        9.Normal User Decalrations
        10.Normal User Agent Declarations
        
        Declaration from origins earlier in this list win over declaration from taken origins.
        
        Properties
        -Shorthand Properties
            >allows authors to specify the values of several properties with a single properties.
            eg. background,font,margin,padding,border etc.
        -vendor specific extensions (a.k.a vendor prefixes)
            >used by browser vendors as a prefix for the names of experimental/non-standard CSS properties: lately, verndors are moving away from vendor prefixes in favor of user-controlled flags or preferences.
            eg. -webkit-, -moz-, -o-, -ms-, etc
        
 
      
      
      
      
      REFERENCES:
      https://www.w3schools.com/css/css_howto.asp
      https://www.quackit.com/css/external_style_sheets.cfm
      https://www.inmotionhosting.com/support/edu/website-design/using-css/linking-your-css-to-your-website
      https://developer.mozilla.org/en-US/docs/Web/CSS/Syntax
      http://www.css-class.com/a-brief-history-of-css/
      http://eecs.vanderbilt.edu/courses/es101-02/Class%20Materials/Gill%20Murrey's%20CSS%20Lecture/screen6.html
